CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(rpcminer)

OPTION(BITCOIN_ENABLE_CUDA "Enable CUDA miner" ON)
#OPTION(BITCOIN_ENABLE_OPENCL "Enable OpenCL miner" OFF)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake-modules/" ${CMAKE_MODULE_PATH})

IF(BITOIN_ENABLE_CUDA AND BITCOIN_ENABLE_OPENCL)
	MESSAGE(FATAL_ERROR "You can only enable CUDA or OpenCL, not both")
ENDIF(BITOIN_ENABLE_CUDA AND BITCOIN_ENABLE_OPENCL)

IF(NOT BITCOIN_ENABLE_CUDA AND NOT BITCOIN_ENABLE_OPENCL)
  MESSAGE(FATAL_ERROR "Enable CUDA or OpenCL !")
ENDIF(NOT BITCOIN_ENABLE_CUDA AND NOT BITCOIN_ENABLE_OPENCL)

# Find all the libraries we will need (Boost, OpenSSL, and CUDA or OpenCL)
SET(Boost_USE_MULTITHREADED ON)
FIND_PACKAGE(Boost REQUIRED date_time filesystem program_options regex system thread)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

# Use OpenSSL module built into CMake
FIND_PACKAGE(OpenSSL REQUIRED)
INCLUDE_DIRECTORIES(${OPENSSL_INCLUDE_DIR})

# Find pthreads
FIND_PACKAGE(Threads REQUIRED)

# Use CUDA local module
IF(BITCOIN_ENABLE_CUDA)
	FIND_PACKAGE(CUDA REQUIRED)
	INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
ENDIF(BITCOIN_ENABLE_CUDA)

# Use OpenCL local module
IF(BITCOIN_ENABLE_OPENCL)
	FIND_PACKAGE(OpenCL REQUIRED)
	INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIR})
ENDIF(BITCOIN_ENABLE_OPENCL)

ADD_SUBDIRECTORY(cmake-rpcminer)

set(CMAKE_BUILD_TYPE Release)
